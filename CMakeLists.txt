# this is the build file for project CPP_Xmake_Env_Template
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(CPP_Xmake_Env_Template LANGUAGES CXX C)

# target
set(CMAKE_C_COMPILER "/home/dls/v85x/DLS_SDK_XMAKE/armv7-toolchain/toolchain/bin/arm-openwrt-linux-muslgnueabi-gcc")
set(CMAKE_CXX_COMPILER "/home/dls/v85x/DLS_SDK_XMAKE/armv7-toolchain/toolchain/bin/arm-openwrt-linux-muslgnueabi-g++")
add_library(components STATIC "")
set_target_properties(components PROPERTIES OUTPUT_NAME "components")
set_target_properties(components PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/armv7/release")
target_include_directories(components PRIVATE
    components/include
    components/sqlite3
)
target_include_directories(components INTERFACE
    components/include
    components/sqlite3
)
target_compile_options(components PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(components PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(components PRIVATE c_std_99)
set_target_properties(components PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(components PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(components PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(components PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(components PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET components PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(components PRIVATE
    components/src/log.cpp
    components/src/linux_uart.c
)

# target
set(CMAKE_C_COMPILER "/home/dls/v85x/DLS_SDK_XMAKE/armv7-toolchain/toolchain/bin/arm-openwrt-linux-muslgnueabi-gcc")
set(CMAKE_CXX_COMPILER "/home/dls/v85x/DLS_SDK_XMAKE/armv7-toolchain/toolchain/bin/arm-openwrt-linux-muslgnueabi-g++")
add_executable(demo "")
set_target_properties(demo PROPERTIES OUTPUT_NAME "demo")
set_target_properties(demo PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/armv7/release")
add_dependencies(demo components)
target_include_directories(demo PRIVATE
    components/include
    components/sqlite3
)
target_include_directories(demo SYSTEM PRIVATE
    /home/dls/.xmake/packages/n/nng/1.7.3/4e9a275161864eca8e34843bd058365b/include
    /home/dls/.xmake/packages/s/sqlite3/3.43.0+200/6431df562db549cfabd025bbf1d78772/include
)
target_compile_definitions(demo PRIVATE
    NNG_STATIC_LIB
)
target_compile_options(demo PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(demo PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(demo PRIVATE c_std_99)
set_target_properties(demo PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(demo PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(demo PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(demo PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(demo PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET demo PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(demo PRIVATE
    nng
    sqlite3
    components
    pthread
    dl
)
target_link_directories(demo PRIVATE
    /home/dls/.xmake/packages/n/nng/1.7.3/4e9a275161864eca8e34843bd058365b/lib
    /home/dls/.xmake/packages/s/sqlite3/3.43.0+200/6431df562db549cfabd025bbf1d78772/lib
    build/linux/armv7/release
)
target_sources(demo PRIVATE
    demo/src/main.cpp
)

